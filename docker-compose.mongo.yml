version: '3.8'

services:
  create_mongo_keyfile:
    image: mongo:6.0
    container_name: create_mongo_keyfile
    restart: no
    entrypoint: [ "bash", "pki_setup.sh" ]
    volumes:
      - ./scripts/pki_setup.sh:/pki_setup.sh
      - mongo-keyfile:/etc/mongodb/pki
    networks:
      - crack-hash-net
  mongo1:
    image: mongo:6.0
    container_name: mongo1
    hostname: mongo1
    restart: unless-stopped
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok' | mongosh admin -u admin -p password --quiet | grep 1
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=crack_hash
    command: [ "--config", "/etc/mongodb/mongod.conf" ]
    volumes:
      - mongo1_data:/data/db
      - mongo-keyfile:/etc/mongodb/pki
      - mongo1-config:/data/configdb
      - mongo1-logs:/var/log/mongodb
      - ./config/mongod.conf:/etc/mongodb/mongod.conf
    depends_on:
      create_mongo_keyfile:
        condition: service_completed_successfully
    networks:
      - crack-hash-net

  mongo2:
    image: mongo:6.0
    container_name: mongo2
    hostname: mongo2
    restart: unless-stopped
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok' | mongosh admin -u admin -p password --quiet | grep 1
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=crack_hash
    command: [ "--config", "/etc/mongodb/mongod.conf" ]
    volumes:
      - mongo2_data:/data/db
      - mongo-keyfile:/etc/mongodb/pki
      - mongo2-config:/data/configdb
      - mongo2-logs:/var/log/mongodb
      - ./config/mongod.conf:/etc/mongodb/mongod.conf
    depends_on:
      create_mongo_keyfile:
        condition: service_completed_successfully
    networks:
      - crack-hash-net

  mongo3:
    image: mongo:6.0
    container_name: mongo3
    hostname: mongo3
    restart: unless-stopped
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok' | mongosh admin -u admin -p password --quiet | grep 1
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=crack_hash
    command: [ "--config", "/etc/mongodb/mongod.conf" ]
    volumes:
      - mongo3_data:/data/db
      - mongo-keyfile:/etc/mongodb/pki
      - mongo3-config:/data/configdb
      - mongo3-logs:/var/log/mongodb
      - ./config/mongod.conf:/etc/mongodb/mongod.conf
    depends_on:
      create_mongo_keyfile:
        condition: service_completed_successfully
    networks:
      - crack-hash-net

  setup:
    image: mongo:6.0
    container_name: setup
    restart: no
    depends_on:
      mongo1:
        condition: service_healthy
      mongo2:
        condition: service_healthy
      mongo3:
        condition: service_healthy
    entrypoint: [ "bash", "setup_repl_set.sh" ]
    volumes:
      - ./scripts/setup_repl_set.sh:/setup_repl_set.sh
    networks:
      - crack-hash-net

  compass:
    image: mongo-express:1.0.2-20
    container_name: compass
    environment:
      - ME_CONFIG_MONGODB_SERVER=haproxy
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_AUTH_DATABASE=admin
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=password
    ports:
      - "8082:8081"
    depends_on:
      - setup
    networks:
      - crack-hash-net

volumes:
  mongo1_data:
  mongo2_data:
  mongo3_data:
  mongo-keyfile:
  mongo1-config:
  mongo2-config:
  mongo3-config:
  mongo1-logs:
  mongo2-logs:
  mongo3-logs:

networks:
  crack-hash-net: